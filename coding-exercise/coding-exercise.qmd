---
title: "R Coding Exercise"
---

## Part 1 - Loading and Checking Data

```{r}
#Load "dslabs" package
library(dslabs)
library(tidyverse)

#Look at help file for "gapminder"
help(gapminder)

#Get an overview of data structure
str(gapminder)

#Get a summary of data
summary(gapminder)

#Determine the type of object "gapminder" is
class(gapminder)
```

## Part 2 - Processing Data

```{r}
#Assign only the African countries in "gapminder" to a new object
africadata <- subset(gapminder, continent == "Africa")

#Get an overview of data structure and data summary for "africadata"
str(africadata)
summary(africadata)

#Create a new object that only contains infant mortality and life expectancy
africadata1 <- africadata %>% select("infant_mortality", "life_expectancy")
  
#Create a new object that only contains population and life expectancy
africadata2 <- africadata %>% select("population", "life_expectancy")

#Get an overview of data structure and data summary for "africadata1" and "africadata2"
str(africadata1)
summary(africadata1)

str(africadata2)
summary(africadata2)
```

## Part 3 - Plotting

```{r}
#Plot life expectancy as a function of infant mortality
plot(africadata1$infant_mortality, africadata1$life_expectancy)
```

There is a negative correlation between infant mortality and life expectancy.

```{r}
#Plot life expectancy as a function of population size
plot(africadata2$population, africadata2$life_expectancy, log = "x")
```

There is a positive correlation between population size and life expectancy, however, there are streaks of data that seem to go together. This is because there are different years for individual countries, and that over time these countries increase in population size and also life expectancy.

## Part 4 - More Data Processing

```{r}
#Figure out which years have missing data for infant mortality
missing_infant_mortality <- africadata[is.na(africadata$infant_mortality),]

#Create a new object by extracting only the data for the year 2000 from "africadata"
africadata3 <- subset(africadata, year == "2000")

#Get an overview of data structure and data summary for "africadata3"
str(africadata3)
summary(africadata3)
```

## Part 5 - More Plotting

```{r}
#Plot life expectancy as a function of infant mortality for the year 2000
plot(africadata3$infant_mortality, africadata3$life_expectancy)
```

There is a negative correlation between infant mortality and life expectancy for the year 2000.

```{r}
#Plot life expectancy as a function of population size for the year 2000
plot(africadata3$population, africadata3$life_expectancy, log = "x")
```

There is no noticeable correlation between population size and life expectancy for the year 2000.

## Part 6 - Simple Model Fits

```{r}
#Fit life expectancy as the outcome and infant mortality as the predictor
fit1 <- lm(life_expectancy ~ infant_mortality, data = africadata3)
summary(fit1)
```

For the year 2000, infant mortality is significantly associated with life expectancy (p-value \< 0.001), however, the low R-squared value indicates that only 47% of the variation in life expectancy is explained by the model with only infant mortality as a predictor.

```{r}
#Fit life expectancy as the outcome and population size as the predictor
fit2 <- lm(life_expectancy ~ population, data = africadata3)
summary(fit2)
```

For the year 2000, population size is not significantly associated with life expectancy (p-value = 0.62), and the very low R-squared value indicates that only 0.52% of the variation in life expectancy is explained by the model with only population size as a predictor.

## **This section contributed by Patrick Kaggwa**

### A. Processing the Data 

**Using "murders" data frame from dslabs**.

```{r}
# Explore the murders dataframe

#Looking at the structure of US gun murders by state in 2010
str(murders)

#I will use head() function to take a quick look at my data

head(murders)
summary(murders)
```

```{r}
# Now I will look through my data frame to see if have missing values using naniar from naniar package
naniar::gg_miss_var(murders)
```

**I see that we don't have any missing data**.

```{r}

# Creating a new variable called 'gunmurders' from total variable from murders data frame

murders <- murders %>% 
  mutate(gunmurders = total)
# checking for the new created new variable
colnames(murders)
```

### B. Plotting 

```{r}

#Using a histogram to visualize the gunmurders using the ggplot function from the ggplot2 package
ggplot(murders, aes(x = gunmurders)) +
  geom_histogram(binwidth = 40, fill = "blue", color = "black") +
  labs(title = "Distribution of Gun Murders in the US in 2010", x = "Gun Murders", y = "Frequency")

```

**Looking at the distribution, its skewed on the left**

```{r}
# Now I will create a table with a state with the highest and lowest gun murders

# Here I will use filter, select functions from the dylyr package

# Finding the state with the maximum gun murders
max_state <- murders %>%
  filter(gunmurders == max(gunmurders)) %>%
  select(state)

# Finding the state with the minimum gun murders
min_state <- murders %>%
  filter(gunmurders == min(gunmurders)) %>%
  select(state)

# Create a summary table
summary_table <- data.frame(
  State = c("Maximum Gun Murders", "Minimum Gun Murders"),
  State_Name = c(max_state$state, min_state$state),
  Gun_Murders = c(max(murders$gunmurders), min(murders$gunmurders))
)

# Print the summary table
print(summary_table)
```

**According to the table California and Vermont have the maximum and minimum gun murders respectively in 2010**.

```{r}
#Then I will look at the gun murders by region  

#I will visualise using a box plot show the Range of each region
ggplot(murders, aes(x = region, y = gunmurders, fill = region)) +
  geom_boxplot() +
  labs(title = "Box Plot of Gun Murders by Region in USA 2010",
       x = "Region", y = "Gun Murders") +
  scale_fill_manual(values = c("Northeast" = "blue", "South" = "green", "North Central" = "red", "West" = "purple"))

```

### C.Simple Model Fits

```{r}
#Now I will do some simple regression of with each of the valiable 

# Fitting a linear regression model
model1 <- lm(gunmurders ~ population, data = murders)
summary(model1)
```

Overall, it seems like the population variable is a statistically significant predictor of gun murders in the linear regression model with a p-value \< 0.01

```{r}
# Fitting a linear regression model
model2 <- lm(gunmurders ~ region, data = murders)
summary(model2)
```

This implies that the differences in gun murders between different regions (South, North Central, West) are not statistically significant based on the current model2.

```{r}
# Fitting a linear multiple regression model between region and total population 
model3 <- lm(gunmurders ~ region + population, data = murders)
summary(model3)
```

Region South' is statistically significant with p value \<0.01 The population variable remains highly significant, suggesting that population is a strong predictor of gun murders in this model.
